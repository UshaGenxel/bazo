(()=>{"use strict";var e={n:t=>{var o=t&&t.__esModule?()=>t.default:()=>t;return e.d(o,{a:o}),o},d:(t,o)=>{for(var a in o)e.o(o,a)&&!e.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:o[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const t=window.wp.blocks,o=window.wp.i18n,a=window.wp.blockEditor,n=window.wp.components,l=window.wp.data,r=window.wp.serverSideRender;var c=e.n(r);const s=JSON.parse('{"UU":"bazo/event-grid"}');(0,t.registerBlockType)(s.UU,{edit:function(e){const{attributes:t,setAttributes:r}=e,{postsToShow:s,selectedCategories:i,showLoadMoreButton:d,postType:g,taxonomy:p}=t,u=(0,a.useBlockProps)(),b=(0,l.useSelect)(e=>{const t=e("core").getPostTypes({per_page:-1});return t?t.filter(e=>!(!e.viewable||"attachment"===e.slug)).map(e=>({label:e.labels.singular_name,value:e.slug})):[]},[]),m=(0,l.useSelect)(e=>{if(!g)return[];const t=e("core").getPostType(g);return t&&t.taxonomies?t.taxonomies.map(t=>{const o=e("core").getTaxonomy(t);return o?{label:o.labels.singular_name,value:o.slug}:null}).filter(Boolean):[]},[g]),w=(0,l.useSelect)(e=>p&&e("core").getEntityRecords("taxonomy",p,{per_page:-1})||[],[p]);return React.createElement(React.Fragment,null,React.createElement(a.InspectorControls,null,React.createElement(n.PanelBody,{title:(0,o.__)("Display Settings","bazo")},React.createElement(n.SelectControl,{label:(0,o.__)("Post Type","bazo"),value:g,options:b,onChange:e=>{r({postType:e,taxonomy:""})}}),m.length>0&&React.createElement(n.SelectControl,{label:(0,o.__)("Category Type","bazo"),value:p,options:m,onChange:e=>r({taxonomy:e,selectedCategories:[]})}),React.createElement(n.RangeControl,{label:(0,o.__)("Posts to show","bazo"),value:s,onChange:e=>r({postsToShow:e}),min:1,max:20}),React.createElement(n.ToggleControl,{label:(0,o.__)("Show Load More Button","bazo"),checked:d,onChange:()=>r({showLoadMoreButton:!d})})),p&&React.createElement(n.PanelBody,{title:(0,o.__)("Filter by Category","bazo")},React.createElement(n.CheckboxControl,{label:(0,o.__)("All","bazo"),checked:0===i.length,onChange:e=>e&&r({selectedCategories:[]})}),w&&w.map(e=>React.createElement(n.CheckboxControl,{key:e.id,label:e.name,checked:i.includes(e.id),onChange:t=>((e,t)=>{r(t?{selectedCategories:[...i,e]}:{selectedCategories:i.filter(t=>t!==e)})})(e.id,t)})))),React.createElement("div",u,React.createElement(c(),{block:"bazo/event-grid",attributes:t})))}})})();